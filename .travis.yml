dist: bionic
sudo: required
language: python

python:
- '3.6'
- '3.7'

env:
  matrix:
  - DJANGO_VERSION=2.2 REST_VERSION=3.8
  - DJANGO_VERSION=2.2 REST_VERSION=3.9
  - DJANGO_VERSION=2.2 REST_VERSION=3.10

services:
  - postgresql

addons:
  postgresql: "10"
  apt:
    packages:
      - postgresql-10-postgis-2.4
      - postgresql-10-pgrouting

stages:
  - lint
  - test
  - deploy

install:
  - sudo apt-get -y install libproj-dev binutils gdal-bin
  - pip install -e .[dev]
  - pip install coverage codecov
  - if [[ $DJANGO_VERSION == dev ]]; then
    pip install -e git+https://github.com/django/django@master#egg=django;
    else
    pip install Django==$DJANGO_VERSION -U;
    fi
  - if [[ $REST_VERSION == dev ]]; then
    pip install -e git+https://github.com/encode/django-rest-framework.git@master#egg=django-rest-framework;
    else
    pip install djangorestframework==$REST_VERSION -U;
    fi


before_script:
  - psql -c "CREATE USER travis_ci_test WITH ENCRYPTED PASSWORD 'travis_ci_test';" -U postgres
  # allow database creation for test
  - psql -c "ALTER USER travis_ci_test WITH SUPERUSER;" -U postgres
  - psql -c 'CREATE DATABASE travis_ci_test WITH OWNER travis_ci_test;' -U postgres
  - psql -d travis_ci_test -c 'CREATE EXTENSION postgis;'
  - psql -d travis_ci_test -c 'CREATE EXTENSION pgrouting;'

after_failure:
  - pip freeze

script:
  - coverage run ./manage.py test
  - codecov

jobs:
  include:
    - stage: lint
      install:
        - pip install flake8
      script:
        - flake8 geostore

    - stage: deploy
      install: skip
      before_script: skip
      script: skip
      deploy:
        stage: deploy
        provider: pypi
        user: "$PYPI_USER"
        password:
          secure: pFnEN/4nfcGNMwOVwBiO5K0hZGVbjPbpMxwxfA9ffGlkJ4lHEU+ElrSvau5TV1Pe0gXCiOHcdHyuEzoi23p75rme+BlNkK+P6YRd0/DCoTFrr80QEKFsyWqoAt7ep67jxKHoO7fy5h1M+VXZwfXZgtiG5zPjkU9cYg0LINf/S7vGMlgz82rv9vZr+u1pG/83oUyeVOibAVnF19XgHXS0BL6VDnc6c4C1odk6AtnSqaI0ASl7q63aXrUbQMpT0+B9esLpEvUHmTrI2t4aI1X02VnhCoM+Ry8b/ltDnFVB0qcnvPqVPdMYdeICnc3bzAJlDUU3xNH1XUo6RWcSbt11woP0MB6NahjYYet7DB8p/dMPgpfbyVSHw2vchy3Kd5teIlssihbuObCPpBhjbdWrKKvhm5rlWslt+Tymcl8MUBNO+2tQiTOGpJZ5dSSyC08VM31+cbxUYWPnmGbFdXlotgrvYMgxLk4n4NVqSa+gG/2wPzWy4OQJhN6eBZEv+qkUhKCB3+5k0/zPOJEjRTh/6b4BG8u+AO9nrNVZsNfY2UgcpeSwdVaU69XijIvQZex2Uck5GdtsWXdrEWhlBzKFXqWK05amavZ5SxsErjT6ljmawE4J8NgL9X+w86k5gJst98bGHhl/7i0V9PX1NwlTHcuAgAZZNAmNtIm1VSm3vWc=
        on:
          tags: true
