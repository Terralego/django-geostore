dist: bionic
sudo: required
language: python

python:
- '3.6'
- '3.7'

env:
  matrix:
  - DJANGO_VERSION=2.1 REST_VERSION=3.8
  - DJANGO_VERSION=2.2 REST_VERSION=3.8
  - DJANGO_VERSION=2.1 REST_VERSION=3.9
  - DJANGO_VERSION=2.2 REST_VERSION=3.9
  - DJANGO_VERSION=2.1 REST_VERSION=3.10
  - DJANGO_VERSION=2.2 REST_VERSION=3.10
  - DJANGO_VERSION=2.1 REST_VERSION=dev
  - DJANGO_VERSION=2.2 REST_VERSION=dev

services:
  - postgresql

addons:
  postgresql: "10"
  apt:
    packages:
      - postgresql-10-postgis-2.4
      - postgresql-10-pgrouting

stages:
  - lint
  - test
  - deploy

install:
  - sudo apt-get -y install libproj-dev binutils gdal-bin
  - pip install -e .[dev]
  - pip install coverage codecov
  - if [[ $DJANGO_VERSION == dev ]]; then
    pip install -e git+https://github.com/django/django@master#egg=django;
    else
    pip install Django==$DJANGO_VERSION -U;
    fi
  - if [[ $REST_VERSION == dev ]]; then
    pip install -e git+https://github.com/encode/django-rest-framework.git@master#egg=django-rest-framework;
    else
    pip install djangorestframework==$REST_VERSION -U;
    fi


before_script:
  - psql -c "CREATE USER travis_ci_test WITH ENCRYPTED PASSWORD 'travis_ci_test';" -U postgres
  # allow database creation for test
  - psql -c "ALTER USER travis_ci_test WITH SUPERUSER;" -U postgres
  - psql -c 'CREATE DATABASE travis_ci_test WITH OWNER travis_ci_test;' -U postgres
  - psql -d travis_ci_test -c 'CREATE EXTENSION postgis;'
  - psql -d travis_ci_test -c 'CREATE EXTENSION pgrouting;'

after_failure:
  - pip freeze

script:
  - coverage run ./manage.py test
  - codecov

jobs:
  include:
    - stage: lint
      install:
        - pip install flake8
      script:
        - flake8 geostore

    - stage: deploy
      install: skip
      before_script: skip
      script: skip
      deploy:
        stage: deploy
        provider: pypi
        user: "$PYPI_USER"
        password:
          secure: bAce8SPDSv+iVtOFVPXU6sbOF9L9a8YVL9RwuIiLFGqXurpRjiY6m1YmR0dQaN8mh5l42ZxlkGZaCEKazziRDc2KRTmKD5U7UKIPgoMSOxHTccMq8P5VC7MRNOCYXfO/qgfSlddbK7ztlrQQym8gjg5Qq4XM2f/HNRzx5eOeBIEGH7TiMzABp7BGDeJsHCaIswJ1NQyWsUxPWk43YPv7MDF7BdIozx/AL+Bua/UhgwVWS7HmDjfH8NtbSLWuInFsBZ7n4qdbDic4hJH4qZaf1MWcOOcWAZrRtRuL0sPcOZK9dv6JjvgIzxbM8ANzzd/eA0OBc+K5PUQb1jps6K+lPsODt6yyLR5yujdG039Cfozd2q8HJ44ItkUZNPQc/ORoDx4/WsiRaMLlIdDduybzK2WAlBsxIiXxi133luxdYYI6UVQkPFqjPSjKTjYyQ800wmIAATRLuxd0b4zaiq09v8mS/CozA7bXYnLQRt+ue5SuJvGXyxQV3JOvW5AWdEB3ccb6XWMMtEVRStogxCtJ9JJgh/60nr/u8KxsXQSM31Xvb/7dzS5VFxGddfMioWyEAkWX18L3cHVwhl91wKuGk8tNeDojO3jBHRj1A1gA5enBc2e/RUdDbC22UJsg7LtYCT93bIadq+/7DYqRpXJq0DM1BkSmgjAB2sFcUsMbAz8=
        on:
          tags: true
